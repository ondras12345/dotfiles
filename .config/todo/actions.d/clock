#!/bin/bash
# Based on the following todo.sh add-on:
# https://github.com/codysork/todo.sh-hamster-clock/blob/0282185505173fb384564ef767bd7bb14710b7d7/.todo.actions.d/clock
# Author: Cody Sork
# License: GPL
# Version: 1.1.0
# Description: Clock in or out of a task in hamster time tracker
# Requirements: hamster-time-tracker
#
# Modified by OndÅ™ej Sluka

action=$1
shift

usage() {
  echo "    clock cur"
  echo "      Show the current running clock."
  echo ""
  echo "    clock in ITEM#"
  echo "      Start a clock for ITEM, beginning now. This clock entry is"
  echo "      written to your GNOME hamster database."
  echo ""
  echo "    clock out [ITEM#]"
  echo "      End the current running clock"
  echo ""
  echo "    clock report"
  echo "      Show all clock totals for today."
  exit
}

[ "$action" = "usage" ] && usage

# make sure we have an item number
SECONDARY_CMD=$1
shift

error() {
    >&2 echo "$@"
    exit 1
}

errorusage() {
    >&2 echo "$@"
    echo "Usage:"
    usage
    exit 1
}

# strip priority, due date, threshold, note, recur,
# context (would interfere with hamster category),
# and trailing whitespace
TASK_SUBSTITUTIONS='s/^([A-Z]) //;s/\(due\|t\):[0-9-]\+//g;s/note:[^ ]*//g;s/rec:[^ ]*//g;s/@[^ ]*//g;s/[[:blank:]]*$//'

parseitem() {
    if ! [[ "$ITEM" =~ ^[0-9]+$ ]]; then
        errorusage "Error: ITEM is not a number."
    fi
    TASK=$(sed "$ITEM!d;$TASK_SUBSTITUTIONS" "$TODO_FILE")
    PROJECT=$(echo "$TASK" | sed -n 's/^.*+\([^ ]*\).*$/\1/p')
}

convert_hamster_task() {
    # Drop times and category
    # Hamster_current is not guaranteed to contain an at sign (@),
    # hence the middle substitution.
    echo "$hamster_current" | sed 's/^[0-9-]\+ [0-9:]\+ //;s/ [0-9]\{2\}:[0-9]\{2\}$//;s/@.*$//g'
}

case "$SECONDARY_CMD" in
    cur)
        hamster_current="$(hamster current)"
        echo "$hamster_current"
        hamster_task=$(convert_hamster_task "$hamster_current")
        taskno=$(sed -n "$TASK_SUBSTITUTIONS;/$hamster_task/=" "$TODO_FILE")
        echo "Task number: $taskno"
        ;;

    in)
        ITEM="$1"
        parseitem
        echo "Clocking in $TASK @ $PROJECT ..."
        hamster add "$TASK@$PROJECT -0"
        ;;

    out)
        hamster_current="$(hamster current)"
        if [ "$hamster_current" = "No activity" ]; then
            >&2 echo "No running clock."
            exit 0
        fi
        hamster_task=$(convert_hamster_task "$hamster_current")

        # There should either be a valid ITEM# or none at all.
        ITEM="$1"
        if [ -n "$ITEM" ] ; then
            parseitem
            if [ "$hamster_task" != "$TASK" ] ; then
                error "No running clock for #$ITEM ($TASK)!"
            fi
        fi

        echo "Clocking out '$hamster_task'..."
        hamster stop
        ;;

    report)
        hamster list
        ;;

    *)
        errorusage "Unknown command '$SECONDARY_CMD'"
        ;;
esac
